const { ethers } = require("hardhat");

/**
 * Script para crear campa√±as de ejemplo en el contrato desplegado
 * Esto permitir√° mostrar campa√±as en la p√°gina de Campaigns
 */
async function main() {
    console.log("üèîÔ∏è  CREANDO CAMPA√ëAS DE EJEMPLO");
    console.log("================================\n");

    const [owner] = await ethers.getSigners();
    console.log("üë§ Owner:", owner.address);
    console.log();

    // Direcci√≥n del contrato desplegado en Lisk Sepolia
    const contractAddress = "0xD9986E17F96e99D11330F72F90f78982b8F29570";

    // Verificar si el contrato existe
    const code = await ethers.provider.getCode(contractAddress);
    if (code === "0x") {
        console.error("‚ùå Contrato no encontrado en la direcci√≥n especificada");
        return;
    }

    console.log("‚úÖ Contrato encontrado en:", contractAddress);

    // Conectar al contrato
    const Hike2Earn = await ethers.getContractFactory("Hike2Earn");
    const hike2Earn = Hike2Earn.attach(contractAddress);

    console.log("üîó Conectado al contrato existente\n");

    // Obtener el n√∫mero actual de campa√±as
    const currentCount = await hike2Earn.campaignCount();
    console.log(`üìä N√∫mero actual de campa√±as: ${currentCount}\n`);

    if (currentCount > 0) {
        console.log("‚ÑπÔ∏è  Ya hay campa√±as creadas. Creando m√°s campa√±as de ejemplo...\n");
    }

    // ========================================
    // CREAR CAMPA√ëAS DE EJEMPLO
    // ========================================

    const campaigns = [
        {
            name: "Expedici√≥n Aconcagua 2025",
            description: "La expedici√≥n m√°s desafiante a la monta√±a m√°s alta de Am√©rica",
            startDate: Math.floor(Date.now() / 1000) + (30 * 24 * 60 * 60), // 30 d√≠as desde ahora
            endDate: Math.floor(Date.now() / 1000) + (60 * 24 * 60 * 60), // 60 d√≠as desde ahora
        },
        {
            name: "Torres del Paine Trek",
            description: "Trekking por los glaciares m√°s impresionantes de Patagonia",
            startDate: Math.floor(Date.now() / 1000) + (15 * 24 * 60 * 60), // 15 d√≠as desde ahora
            endDate: Math.floor(Date.now() / 1000) + (25 * 24 * 60 * 60), // 25 d√≠as desde ahora
        },
        {
            name: "Volc√°n Villarrica Ascenso",
            description: "Experiencia √∫nica escalando un volc√°n activo",
            startDate: Math.floor(Date.now() / 1000) + (7 * 24 * 60 * 60), // 7 d√≠as desde ahora
            endDate: Math.floor(Date.now() / 1000) + (10 * 24 * 60 * 60), // 10 d√≠as desde ahora
        },
        {
            name: "Cerro Manquehue Challenge",
            description: "Desaf√≠o t√©cnico en las cercan√≠as de Santiago",
            startDate: Math.floor(Date.now() / 1000) + (3 * 24 * 60 * 60), // 3 d√≠as desde ahora
            endDate: Math.floor(Date.now() / 1000) + (5 * 24 * 60 * 60), // 5 d√≠as desde ahora
        }
    ];

    console.log("üìÖ CREANDO CAMPA√ëAS:");
    console.log("===================");

    const createdCampaigns = [];

    for (let i = 0; i < campaigns.length; i++) {
        const campaign = campaigns[i];
        console.log(`\nüèîÔ∏è  Creando campa√±a ${i + 1}: "${campaign.name}"`);

        try {
            const tx = await hike2Earn.createCampaign(
                campaign.name,
                campaign.startDate,
                campaign.endDate
            );

            console.log("‚è≥ Esperando confirmaci√≥n...");
            const receipt = await tx.wait();

            console.log("‚úÖ Campa√±a creada exitosamente!");
            console.log(`   üìÖ Inicio: ${new Date(campaign.startDate * 1000).toLocaleDateString()}`);
            console.log(`   üìÖ Fin: ${new Date(campaign.endDate * 1000).toLocaleDateString()}`);
            console.log(`   ‚õìÔ∏è  TX Hash: ${receipt.hash}`);

            // Agregar algunas monta√±as a cada campa√±a
            await addMountainsToCampaign(hike2Earn, Number(currentCount) + i, campaign.name);

            createdCampaigns.push({
                id: Number(currentCount) + i,
                ...campaign,
                txHash: receipt.hash
            });

        } catch (error) {
            console.error(`‚ùå Error creando campa√±a "${campaign.name}":`, error.message);
        }
    }

    console.log("\n" + "=".repeat(50));
    console.log("üéâ RESUMEN DE CAMPA√ëAS CREADAS");
    console.log("=".repeat(50));

    for (const campaign of createdCampaigns) {
        console.log(`\nüèîÔ∏è  Campa√±a #${campaign.id}: ${campaign.name}`);
        console.log(`   üìù Descripci√≥n: ${campaign.description}`);
        console.log(`   üìÖ Per√≠odo: ${new Date(campaign.startDate * 1000).toLocaleDateString()} - ${new Date(campaign.endDate * 1000).toLocaleDateString()}`);
        console.log(`   ‚õìÔ∏è  TX: ${campaign.txHash}`);
    }

    // Verificar el total de campa√±as
    const finalCount = await hike2Earn.campaignCount();
    console.log(`\nüìä TOTAL DE CAMPA√ëAS EN EL CONTRATO: ${finalCount}`);

    console.log("\n" + "üéØ PR√ìXIMOS PASOS:");
    console.log("1. Ejecuta 'npm run dev' en el directorio front/");
    console.log("2. Conecta tu wallet a Lisk Sepolia");
    console.log("3. Ve a la p√°gina de Campaigns");
    console.log("4. ¬°Deber√≠as ver las nuevas campa√±as!");
}

// Funci√≥n auxiliar para agregar monta√±as a una campa√±a
async function addMountainsToCampaign(contract, campaignId, campaignName) {
    const mountainsByCampaign = {
        "Expedici√≥n Aconcagua 2025": [
            { name: "Aconcagua", altitude: 6962, location: "Mendoza, Argentina" },
            { name: "Cerro Bonete", altitude: 6759, location: "La Rioja, Argentina" },
        ],
        "Torres del Paine Trek": [
            { name: "Torres del Paine", altitude: 2500, location: "Patagonia, Chile" },
            { name: "Cerro Almirante Nieto", altitude: 2670, location: "Patagonia, Chile" },
        ],
        "Volc√°n Villarrica Ascenso": [
            { name: "Volc√°n Villarrica", altitude: 2847, location: "Puc√≥n, Chile" },
            { name: "Volc√°n Llaima", altitude: 3125, location: "Temuco, Chile" },
        ],
        "Cerro Manquehue Challenge": [
            { name: "Cerro Manquehue", altitude: 1632, location: "Santiago, Chile" },
            { name: "Cerro Pochoco", altitude: 2414, location: "Santiago, Chile" },
        ]
    };

    const mountains = mountainsByCampaign[campaignName] || [
        { name: "Monte Demo", altitude: 2000, location: "Demo Location" }
    ];

    console.log(`   üèîÔ∏è  Agregando ${mountains.length} monta√±as:`);

    for (const mountain of mountains) {
        try {
            const tx = await contract.addMountain(
                campaignId,
                mountain.name,
                mountain.altitude,
                mountain.location
            );
            await tx.wait();
            console.log(`     ‚úÖ ${mountain.name} (${mountain.altitude}m) - ${mountain.location}`);
        } catch (error) {
            console.error(`     ‚ùå Error agregando ${mountain.name}:`, error.message);
        }
    }
}

main()
    .then(() => {
        console.log("\nüéâ Script completado exitosamente!");
        process.exit(0);
    })
    .catch((error) => {
        console.error("\nüí• Error ejecutando el script:", error);
        process.exit(1);
    });
